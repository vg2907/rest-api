swagger: '2.0'
info:
  description: Enable customers of the organisation to manage their profile
  version: 'v1'
  title: Customer Profile Management
  termsOfService: 'urn:tos'
  contact:
    name: V G
    url: '--'
    email: vg@gmail.com
host: 'localhost:8163'
basePath: /
tags:
  - name: address-service
    description: Address Service
  - name: address-service
    description: Customer Service
consumes:
  - application/json
  - application/hal+json
produces:
  - application/json
  - application/hal+json
paths:
  /v1/customers:
    post:
      tags:
        - address-service
      summary: addCustomer
      operationId: addCustomerUsingPOST
      consumes:
        - application/json
        - application/hal+json
      produces:
        - application/json
        - application/hal+json
      parameters:
        - in: body
          name: customerfromRequest
          description: customerfromRequest
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - address-service
      summary: updateCustomer
      operationId: updateCustomerUsingPUT
      consumes:
        - application/json
        - application/hal+json
      produces:
        - application/json
        - application/hal+json
      parameters:
        - in: body
          name: customerfromRequest
          description: customerfromRequest
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/v1/customers/{customerId}':
    get:
      tags:
        - address-service
      summary: getCustomerById
      operationId: getCustomerByIdUsingGET
      consumes:
        - application/json
        - application/hal+json
      produces:
        - application/json
        - application/hal+json
      parameters:
        - name: customerId
          in: path
          description: customerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Customer could not be found with customerId
    delete:
      tags:
        - address-service
      summary: deleteCustomer
      operationId: deleteCustomerUsingDELETE
      consumes:
        - application/json
        - application/hal+json
      produces:
        - application/json
        - application/hal+json
      parameters:
        - name: customerId
          in: path
          description: customerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/v1/customers/{customerId}/addresses':
    post:
      tags:
        - address-service
      summary: create
      operationId: createUsingPOST
      consumes:
        - application/json
        - application/hal+json
      produces:
        - application/json
        - application/hal+json
      parameters:
        - in: body
          name: address
          description: address
          required: true
          schema:
            $ref: '#/definitions/Address'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Customer could not be found with customerId
    put:
      tags:
        - address-service
      summary: update
      operationId: updateUsingPUT
      consumes:
        - application/json
        - application/hal+json
      produces:
        - application/json
        - application/hal+json
      parameters:
        - in: body
          name: customerfromRequest
          description: customerfromRequest
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Customer could not be found with customerId
  '/v1/customers/{customerId}/addresses/{addressId}':
    get:
      tags:
        - address-service
      summary: get
      operationId: getUsingGET
      consumes:
        - application/json
        - application/hal+json
      produces:
        - application/json
        - application/hal+json
      parameters:
        - name: addressId
          in: path
          description: addressId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - address-service
      summary: delete
      operationId: deleteUsingDELETE
      consumes:
        - application/json
        - application/hal+json
      produces:
        - application/json
        - application/hal+json
      parameters:
        - name: addressId
          in: path
          description: addressId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
definitions:
  Address:
    type: object
    properties:
      addressId:
        type: integer
        format: int64
      email:
        type: string
      home:
        type: string
      links:
        type: array
        items:
          $ref: '#/definitions/Link'
      office:
        type: string
  Customer:
    type: object
    properties:
      address:
        $ref: '#/definitions/Address'
      customerId:
        type: integer
        format: int64
      dateOfBirth:
        $ref: '#/definitions/LocalDate'
      firstName:
        type: string
      lastName:
        type: string
      links:
        type: array
        items:
          $ref: '#/definitions/Link'
  
